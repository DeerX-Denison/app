# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
	desc 'Push a new beta build to TestFlight'

	lane :clean do
		clear_derived_data
	end

	lane :build_ci do
		setup_ci if ENV['CI']
		app_store_connect_api_key(
			key_id: ENV['APPSTORE_KEY_ID'],
			issuer_id: ENV['APPSTORE_ISSUER_ID'],
			key_content: ENV['APPSTORE_KEY_CONTENT'],
		)
		match(type: 'appstore', git_basic_authorization: ENV['GIT_AUTH_TOKEN'])
		increment_build_number(xcodeproj: 'app.xcodeproj')
		build_app(workspace: 'app.xcworkspace', scheme: 'app')
		upload_to_testflight(skip_waiting_for_build_processing: true)
	end

	lane :build do
		app_store_connect_api_key(
			key_id: ENV['APPSTORE_KEY_ID'],
			issuer_id: ENV['APPSTORE_ISSUER_ID'],
			key_content: ENV['APPSTORE_KEY_CONTENT'],
		)
		match(type: 'appstore', git_basic_authorization: ENV['GIT_AUTH_TOKEN'])
		increment_build_number(xcodeproj: 'app.xcodeproj')
		build_app(workspace: 'app.xcworkspace', scheme: 'app')
		upload_to_testflight
	end

	lane :patch do
		app_store_connect_api_key(
			key_id: ENV['APPSTORE_KEY_ID'],
			issuer_id: ENV['APPSTORE_ISSUER_ID'],
			key_content: ENV['APPSTORE_KEY_CONTENT'],
		)
		match(type: 'appstore', git_basic_authorization: ENV['GIT_AUTH_TOKEN'])
		increment_version_number(bump_type: 'patch')
		build_app(workspace: 'app.xcworkspace', scheme: 'app')
		upload_to_testflight
	end

	lane :minor do
		app_store_connect_api_key(
			key_id: ENV['APPSTORE_KEY_ID'],
			issuer_id: ENV['APPSTORE_ISSUER_ID'],
			key_content: ENV['APPSTORE_KEY_CONTENT'],
		)
		match(type: 'appstore', git_basic_authorization: ENV['GIT_AUTH_TOKEN'])
		increment_version_number(bump_type: 'minor')
		build_app(workspace: 'app.xcworkspace', scheme: 'app')
		upload_to_testflight
	end

	lane :major do
		app_store_connect_api_key(
			key_id: ENV['APPSTORE_KEY_ID'],
			issuer_id: ENV['APPSTORE_ISSUER_ID'],
			key_content: ENV['APPSTORE_KEY_CONTENT'],
		)
		match(type: 'appstore', git_basic_authorization: ENV['GIT_AUTH_TOKEN'])
		increment_version_number(bump_type: 'major')
		build_app(workspace: 'app.xcworkspace', scheme: 'app')
		upload_to_testflight
	end

	lane :major do
		app_store_connect_api_key(
			key_id: ENV['APPSTORE_KEY_ID'],
			issuer_id: ENV['APPSTORE_ISSUER_ID'],
			key_content: ENV['APPSTORE_KEY_CONTENT'],
		)
		match(type: 'appstore', git_basic_authorization: ENV['GIT_AUTH_TOKEN'])
		build_app(workspace: 'app.xcworkspace', scheme: 'app')
		# upload_to_testflight
	end
end
